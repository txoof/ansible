---
- name:  config
  hosts: "{{ host | default('none') }}"
  gather_facts: yes

  tasks:
    - name: gather installed debian packages
      package_facts:
        manager: "auto"

    - name: check if go-librespot is installed
      stat:
        path: /usr/local/bin/go-librespot-daemon
      register: go_librespot_installed

    - name: install and configure squeezelite
      block:

      - name: install necessary packages
        apt:
          pkg:
          - curl
          - apt-transport-https
          - squeezelite
          
          state: latest
        become: true
        when: "'squeezelite' not in ansible_facts.packages"

      - name: set sound output device
        lineinfile:
          path: /etc/default/squeezelite
          regexp: '^SL_SOUNDCARD="\w+"'
          line: 'SL_SOUNDCARD="sysdefault:CARD=sndrpihifiberry"'
          state: present
          backup: yes
        become: true
        register: match
        notify: restart_squeezelite

      - name: set squeezelite timeout for soundcard release
        lineinfile:
          path: /etc/default/squeezelite
          regexp: '^SB_EXTRA_ARGS="-C \d+"'
          line: 'SB_EXTRA_ARGS="-C 10"'
          state: present
          backup: yes
        become: true
        register: match
        notify: restart_squeezelite

    - name: build and install go-librespot
      block:

        - name: install debian packages for go-librespot
          apt: 
            pkg:
            - libasound2-dev
            - libogg-dev
            - libvorbis-dev

        - name: clone go-librespot repo
          git: 
            repo: https://github.com/devgianlu/go-librespot.git
            dest: /tmp/go-librespot
        
        - name: Download Go 1.22
          get_url:
            url: "https://go.dev/dl/go1.22.0.linux-arm64.tar.gz"
            dest: /tmp/go.linux-arm64.tar.gz
            mode: '0755'

        - name: extract go release
          unarchive:
            src: /tmp/go.linux-arm64.tar.gz
            dest: /usr/local
            remote_src: yes
            creates: /usr/local/go

        - name: Find all executables in /usr/local/go/bin
          ansible.builtin.find:
            paths: /usr/local/go/bin
            file_type: file
          register: go_bin_files

        - name: Create symlinks in /usr/local/bin
          ansible.builtin.file:
            src: "{{ item.path }}"
            dest: "/usr/local/bin/{{ item.path | basename }}"
            state: link
          loop: "{{ go_bin_files.files }}"

        - name: build go-librespot  
          shell: |
            cd /tmp/go-librespot
            env GOARCH=arm64 GOOS=linux CGO_ENABLED=1 go build -o /usr/local/bin/go-librespot-daemon ./cmd/daemon
        
        - name: set executable permissions on go-librespot
          file:
            path: /usr/local/bin/go-librespot-daemon
            mode: '0755'

        - name: Copy librespot_config.yml to /etc
          copy:
            src: ./files/librespot_config.yml
            dest: /etc/librespot_config.yml
            owner: root
            group: root
            mode: '0644'

        - name: Install go-librespot-daemon systemd unit file
          ansible.builtin.copy:
            src: ./files/go-librespot_daemon.service
            dest: /etc/systemd/system/go-librespot-daemon.service
            owner: root
            group: root
            mode: '0644'
          notify:
            - Reload systemd
            - Enable and start go-librespot-daemon

        - name: cleanup go-librespot
          file:
            path: /tmp/go-librespot
            state: absent
          become: true
        
      when: go_librespot_installed.stat.exists == False  
      become: true
    



  handlers:
    - name: restart_squeezelite
      become: true
      service:
        name: squeezelite
        state: restarted

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start go-librespot-daemon
      ansible.builtin.systemd:
        name: go-librespot-daemon
        enabled: yes
        state: started


    # - name: restart_spocon
    #   become: true
    #   service:
    #     name: spocon
    #     state: restarted  

